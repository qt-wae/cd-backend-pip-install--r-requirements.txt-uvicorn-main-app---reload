<hr>

<h2>🔍 تحليل الشارت باستخدام الذكاء الاصطناعي</h2>

<form id="upload-form">
  <input type="file" id="image-input" accept="image/*" required />
  <button type="submit">رفع وتحليل الصورة</button>
</form>

<div id="result" style="margin-top: 20px; font-weight: bold;"></div>

<script>
  document.getElementById("upload-form").addEventListener("submit", async function (e) {
    e.preventDefault();
    const input = document.getElementById("image-input");
    if (!input.files.length) return;

    const formData = new FormData();
    formData.append("image", input.files[0]);

    document.getElementById("result").textContent = "جاري التحليل...";

    // نقطة API وهمية الآن – سنربطها لاحقًا
    try {
      const response = await fetch("https://your-ai-endpoint.com/analyze", {
        method: "POST",
        body: formData
      });

      const result = await response.json();
      document.getElementById("result").textContent = "النتيجة: " + result.signal;
    } catch (error) {
      document.getElementById("result").textContent = "حدث خطأ أثناء التحليل.";
    }
  });
</script><hr>

<h2>🔍 تحليل الشارت باستخدام الذكاء الاصطناعي</h2>

<form id="upload-form">
  <input type="file" id="image-input" accept="image/*" required />
  <button type="submit">رفع وتحليل الصورة</button>
</form>

<div id="result" style="margin-top: 20px; font-weight: bold;"></div>

<script>
  document.getElementById("upload-form").addEventListener("submit", async function (e) {
    e.preventDefault();
    const input = document.getElementById("image-input");
    if (!input.files.length) return;

    const formData = new FormData();
    formData.append("image", input.files[0]);

    document.getElementById("result").textContent = "جاري التحليل...";

    // نقطة API وهمية الآن – سنربطها لاحقًا
    try {
      const response = await fetch("https://your-ai-endpoint.com/analyze", {
        method: "POST",
        body: formData
      });

      const result = await response.json();
      document.getElementById("result").textContent = "النتيجة: " + result.signal;
    } catch (error) {
      document.getElementById("result").textContent = "حدث خطأ أثناء التحليل.";
    }
  });
</script><hr>

<h2>🔍 تحليل الشارت باستخدام الذكاء الاصطناعي</h2>

<form id="upload-form">
  <input type="file" id="image-input" accept="image/*" required />
  <button type="submit">رفع وتحليل الصورة</button>
</form>

<div id="result" style="margin-top: 20px; font-weight: bold;"></div>

<script>
  document.getElementById("upload-form").addEventListener("submit", async function (e) {
    e.preventDefault();
    const input = document.getElementById("image-input");
    if (!input.files.length) return;

    const formData = new FormData();
    formData.append("image", input.files[0]);

    document.getElementById("result").textContent = "جاري التحليل...";

    // نقطة API وهمية الآن – سنربطها لاحقًا
    try {
      const response = await fetch("https://your-ai-endpoint.com/analyze", {
        method: "POST",
        body: formData
      });

      const result = await response.json();
      document.getElementById("result").textContent = "النتيجة: " + result.signal;
    } catch (error) {
      document.getElementById("result").textContent = "لا اريد ايا خطا.";
    }
  });
</script><hr>

<h2>🔍 تحليل الشارت باستخدام الذكاء الاصطناعي</h2>

<form id="upload-form">
  <input type="file" id="image-input" accept="image/*" required />
  <button type="submit">رفع وتحليل الصورة</button>
</form>

<div id="result" style="margin-top: 20px; font-weight: bold;"></div>

<script>
  document.getElementById("upload-form").addEventListener("submit", async function (e) {
    e.preventDefault();
    const input = document.getElementById("image-input");
    if (!input.files.length) return;

    const formData = new FormData();
    formData.append("image", input.files[0]);

    document.getElementById("result").textContent = "جاري التحليل...";

    // نقطة API وهمية الآن – سنربطها لاحقًا
    try {
      const response = await fetch("https://your-ai-endpoint.com/analyze", {
        method: "POST",
        body: formData
      });

      const result = await response.json();
      document.getElementById("result").textContent = "النتيجة: " + result.signal;
    } catch (error) {
      document.getElementById("result").textContent = "حدث خطأ أثناء التحليل.";
    }
  });
</scri# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
